#This file has 5 propose rules. Move-forward. Turn. move-radar-landmark. Radar-off. Radar-on
#Radar-off is happening if battery is 0 or lower and its on only when it does NOT sees a landmark.
#if it sees a landmark it will off. if no landmark it stays on.
#the turn on and off of the radar is entirely contolled by the respective operators
#unlike previous versions the turn operator will not turn on the radar and it is now handled Radar-off/Radar-on operators.


sp {initialize*state*preferable*turn-directions
   (state <ss> ^type state)
   -->
   (<ss> ^preferable-turn-directions <ne> <nw> <sw> <se> ) 
   
   (<ne> ^value northeast ^prefer northeast) 
   (<ne> ^value northeast ^prefer east)
   (<ne> ^value northeast ^prefer north)
   
   (<nw> ^value northwest ^prefer northwest)
   (<nw> ^value northwest ^prefer west)
   (<nw> ^value northwest ^prefer north)

   (<sw> ^value southwest ^prefer southwest)
   (<sw> ^value southwest ^prefer south)
   (<sw> ^value southwest ^prefer west)

   (<se> ^value southeast ^prefer southeast)
   (<se> ^value southeast ^prefer south)
   (<se> ^value southeast ^prefer east)
}

sp {propose*move-forward
   (state <s> ^io.input-link.area.view <area-view>
              ^io.input-link.area.locale.direction <current-direction>
              ^io.input-link.agent.pose <e>  )
   (<area-view> ^<current-direction>.type <> block )
   (<e> ^x <x> ^y <y>)
-->
# (write | proposing move : | <direction-command> )
   (<s> ^operator <o> + =)
   (<o> ^name move-forward
        ^actions <a>)
   (<a> ^move.direction <current-direction> )}


 sp {propose*turn
   (state <s> ^io.input-link.area.view <area-view>
              ^io.input-link.area.locale.direction <current-direction>
              ^io.input-link.agent.pose <e> )
   (<area-view> ^<current-direction>.type block
                ^<turn-direction>.type normal )

    # (<area-view> ^ { << north northeast northwest east west south southeast southwest >> <n-dir> } )
    # (<area-view> ^<n-dir>.type <> block )
-->
   (<s> ^operator <o> + =)
   (<o> ^name turn 
        ^actions <a>)
   (<a> ^move.direction <turn-direction> )}


sp {propose*move-radar-landmark
   (state <s> ^io.input-link.agent.pose <e>
              ^io.input-link.radar.live.landmarks.<radar-landmarks> <live-landmark>
              ^io.input-link.area.view <area-view>)
   (<e> ^x <x> ^y <y>)
   (<live-landmark> ^direction-command <direction-command> )
   (<live-landmark> ^distance <landmark-distance> )
   (<area-view> ^<direction-command>.type <> block )
   
-->
   (<s> ^operator <o> + =)
   (<o> ^name move-radar-landmark
        ^distance <landmark-distance>
        ^actions <a>)
   (<a> ^move.direction <direction-command> )}

# sp {propose*move-radar-landmark
#    (state <s> ^io.input-link.agent.pose <e>
#               ^io.input-link.radar.live.landmarks.<radar-landmarks> <live-landmark>
#               ^io.input-link.area.view <area-view>)
#    (<e> ^x <x> ^y <y>)
#    (<live-landmark> ^relative-direction-command <relative-direction-command> )
#    (<live-landmark> ^distance <landmark-distance> )
#    (<area-view> ^<relative-direction-command>.type <> block )
   
# -->
#    (<s> ^operator <o> + =)
#    (<o> ^name move-radar-landmark
#         ^distance <landmark-distance>
#         ^actions <a>)
#    (<a> ^move.direction <relative-direction-command> )}


# Radar propose rules

sp {propose*radar-on
   (state <s> ^io.input-link.radar <radar>)
   (<radar> ^status off
         -^battery <= 0
         -^live.landmarks <live-landmarks>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name radar-on
        ^actions.radar.toggleRadar on )}

sp {propose*radar-off
   (state <s> ^io.input-link.radar <radar>)
   (<radar> ^status on
         -^battery <= 0
         ^live.landmarks <live-landmarks>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name radar-off
        ^actions.radar.toggleRadar off )}


## Selection rules

sp {select*radar-off*move
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name << radar-off radar-on >>)
   (<o2> ^name << turn move-forward move-radar-landmark >>)
-->
   (<s> ^operator <o1> > <o2>)}

sp {select*move-radar-landmark
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name move-radar-landmark )
   (<o2> ^name move-forward )
-->
   (<s> ^operator <o1> > <o2>)}

sp {select*move-radar-landmark*shortest-distance
    (state <s> ^operator <o1> + 
                ^operator <o2> + )
    (<o1> ^name move-radar-landmark
            ^distance <distance1> )
    (<o2> ^name move-radar-landmark
            ^distance <distance2> > <distance1> )
-->
(<s> ^operator <o1> > <o2>)}

sp {select*turn*pick-prefered-turn-directions
    (state <s> ^operator <o1> + 
               #  ^operator <o2> +
                ^preferable-turn-directions <ptd>
                ^io.input-link.area.locale.direction <current-direction> )
    (<pd> ^value <current-direction>
        ^prefer <prefer-direction> )
    (<o1> ^name turn
            ^actions.move.direction <prefer-direction> )
   #  (<o2> ^name << move-forward move-radar-landmark >>
   #          ^cell-type << block >>  )
    
-->
(<s> ^operator <o1> > )}


#create and remove output action commands

sp {apply*operator*create-action-command
   (state <s> ^operator <o>
              ^io.output-link <ol>)
   (<o> ^actions <act>)
   (<act> ^<att> <value>)
-->
   (<ol> ^<att> <value>)}

sp {apply*operator*remove-command
   (state <s> ^operator.actions
              ^io.output-link <ol>)
   (<ol> ^<att> <value>)
   (<value> ^status complete)
-->
   (<ol> ^<att> <value> -)}

sp {state*goal*reached
   (state <s> ^io.input-link.landmarks.status inactive )
   -->
   (write | All Landmarks Explored !! |)
   (halt)}

